특강 준비

왜 이 강의를 들어야 하는가?
대상: 시스템 기획의 개념을 잡지 못하는 사람
게임의 완성도는 시스템에서 시작되는걸 모르는 사람

게임의 재미는 레벨디자인에서 오고
레벨디자인의 설계는 곧 시스템이다.


시스템 = 게임의 재미를 만들기 위한 기능


재미를 만들어 내는 역량키우자!
 레퍼런스 게임 시스템 역기획(재미분석)하기

주제 정하기
 - 내가 좋아하는 게임 ㅊㅊ
	1. 끝까지 해낼 수 있도록 동기부여
	
 - 주의 사항
	1. 로직이 숨겨져 있는 시스템
		- 예를 들면 대미지 계산공식
		- 보정값을 적용하는 케이스가 있음
			하나의 예시를 작성해서 보여주기
	2. in-app purchase는 비추
	이유: 컨텐츠 해금에 큰 비용이 들어가는 시스템
		- 시간과 돈이 많이 들어가는 시스템을 분석하는건 어리석은 생각!
		
 - 따라서 처음부터 끝까지 기능을 해금할 수 있는 '콘솔'을 추천

오늘 예시는 액션 RPG나 슈팅게임에서 핵심 재미를 담당하고 있는 보스 AI 시스템을 만들어 볼께요.

보스는 특정 조건을 만족할 경우 매우 강한 공격을 해서 플레이어를 위험하는 메타를 설계해보겠습니다.

이제 내용을 먼저 정리해볼텐데요.
처음에는 기본 기능정리부터 재미요소로 만들 것을 확장해 가는 것까지 해보겠습니다.

1. 기본 기능 정리
 - 기본 기능이란 몬스터의 특수한 기능을 제외하고 가장 원초적인 요소들로 구성된 기능
 
	1.1 상태
		정의: 어떤 행동(액션)을 하기 위해 만족해야 하는 조건
		1.1.1 종류
			1) Live
			2) Death
		
	1.2 행동
		정의: 행위를 의미.
		1.2.1 종류
			1) Stand
			2) Move
			3) Atk
	
	1.3 속성
		정의: 상태와 행동에서 사용할 데이터
		1.3.1 종류
			- 체력
			- 이동속도
			- 공격력(공격속도)
			- 사거리

2. 도식화	
 - 도식화를 하는 이유는 이해를 위함! 글보다는 도형으로 표현해 작동되는 구조를 쉽게 파악할 수 있다.
 
3. 재미요소 만들기(생각확장하기)
 - 생각의 기준 정하기: 몬스터와 "전투를 진행"할 수록 점점 "어려워지는 난이도"를 구성하고 싶다.
 
 2가지 키워드
 - "진행할 수록", "어려워지는 난이도"


4. 메타 녹이기(설계할때 고려할 요소는 크게 2가지 입니다.)
	1. 메타가 작동되는 기준값 찾기
		- 진행할 수록 = 몬스터의 "누적 피해량"에 따라
		- 어려워지는 난이도 = "사거리 유지시간"에 따라 근거리 스킬, 원거리 스킬 사용
		

	1.1 상태
		1.1.1 종류
			1) Live
			2) Death
		
	1.2 행동
		정의: 행위를 의미.
		1.2.1 종류
			1) Stand
			2) Move
			3) Atk
				- 기본공격
				- 스킬
					근거리
					원거리

	
	1.3 속성
		정의: 상태와 행동에서 사용할 데이터
		1.3.1 종류
			- 체력
			- 이동속도
			- 공격력(공격속도)
			- 사거리, 사거리 유지시간
			- 누적 피해량
		
		1.3.2 스킬
			- 근거리 스킬: 칼 내려 찍기
				- 대미지 배율:
				- 쿨타임:
				
			- 원거리 스킬: 퐈이어볼 1개 발사
				- 퐈이어볼 사이즈(충돌체 크기)
				- 충돌체 이동속도
				- 쿨타임:
				- 발사체 제거 (충돌 판단): 시간, 이동거리, 오브젝트 충돌

테이블 설계하기
 - 기획자관점
 - 테이블을 해야할 것과 아닌 것을 구분해야 하고 프로그래머와 충분히 논의
 
 - 기획자는 데이터관리를 중점적으로 설계
	1. 엑셀의 참조 값을 사용하는 방식으로 설계
	2. 확장이 유연한 구조로 설계
		확장: 등급, 레벨, 강화단계, 신규 아이템 추가, 리스트 입력
	3. 데이터 검증하는 수식을 넣기 위함
		데이터 검증: 키값 중복 체크
		구분선 추가
	4. 값을 입력할땐 가급적 수식을 통해 계산된 값으로 사용 권장
	



밸런스 특강
 - 여기 계신분들이 개발하고 계신 게임들이 모두 달라서 특정 장르에서만 자주 사용하는 밸런스 강의를 준비하지 않았습니다.
 - 순환구조와 BM 설계도 같이 해보는 시간을 가지겠습니다.
 
 1. 밸런스
 - 밸런스 이야기 하기 전에 간단한 설문조사.
 인터넷에 찾아 보면 프로그램 툴이나 수학 공식을 이용해서 기대값을 계산할 수 있는 자료들이 있는데요.
 실제로 이 자료를 보시고 이 방식을 이용해서 밸런스를 잡아 보신 분이 있을까요?
 
 혹시 이 자료를 못 보신 분들을 위해서 한번 볼께요.
 이 자료는 확률 밸런스 잡으실때 많이 보시는 자료 중에 하나인데요. 갠전으로 의미있는 자료이기 때문에 한번쯤 보시는 걸 추천드려요.
 NDC18에 했던 '게임 디자이너에게 도움이 되는 확률과 통계 이야기'자료 입니다.
 1. 기대값에 대한 내용이 나오네요. 평균과 같은 개념으로 1회의 시행결과로 기대되는 수의 크기
 2. 확률을 이용해 평균 시도 횟수 구하기 = 1 / 확률이죠
 3. 확률을 이용해 연속으로 N번 발생하는데 필요한 평균 시도 횟수 구하기 = 1 / 확률 ^ 연속횟수
 
 다음엔 페이지에는 QA 팀에서 의도한 확률대로 안나온다는 피드백과 함께 검증하는 방법에 대해 나와 있어요.
  - 결론은 코드에 이슈가 없는 이상 확률은 정상적으로 작동한다는 내용입니다.
  - 시도 횟수에 따라 기대값에 가까워 진다는 내용입니다.
 
 
 다음 내용에서는 장비 드랍 확률에 따라 몬스터 사냥 기대 횟수를 구하는 내용이 있어요.
  - 1%의 확률로 5개의 장비를 얻으련에서 5가지를 모우기 위해서는 몇개의 아이템을 얻어야 하는지 계산하는 내용이에요.
  - 다시 이야기하면 N가지 쿠폰을 '모두' 모으는데 필요한 쿠폰 수
  - 쿠폰 콜렉터 공식을 이용하면 구할 수 있다고 나와있어요. n(1/1 + 1/2 + ... + 1/n)
  
  - 필요 수 / 확률로 몬스터 처치 필요량을 계산도 할 수 있구요.
 
 그래서 획득량을 확률로 밸런스를 잡으면 문제가 될 수 있는 여지가 하나 있습니다.
 획득 분포도를 보면 편차가 생기는 현상이 있어요. 특히 확률이 점점 높아질 경우 이런 문제가 더 심하게 발생하게 됩니다.
 따라서 장기적인 파밍요소가 있는 게임들은 단순하게 확률 하나만 가지고 밸런스를 정리하는 것보다 확정적인 요소랑 병행해서 구성하시는걸 추천드립니다.
 확정적인 요소란 운적인 요소에 힘을 많이 뺀 것들이라고 생각해 주시면 될 것 같습니다.예를 들면 출석이나 횟수가 대표적으로 있겠네요.
 	
 그럼 이제 게임의 순환 설계와 밸런스를 잡아보는 시간을 가질께요.
 
 순환 설계는 무엇이고 왜 필요한가?
 인간은 동물과는 다르게 무의식적으로 효율을 계산합니다. 예를들어서 본인이 맨땅에 삽질을 하고 있다고 생각해 보세요. 점점 무의미한 행동임을 알게되고 
 머리속에 이런 생각이 들거에요. 내가 이 시간에 차라리 xx을 하고 말지. 이것처럼 시간이란 기준으로 효율을 계산하게 되는거죠.
 게임에서도 마찬가지에요. 몬스터를 한대 쳤을때 10의 대미지가 나오고 머리위에 체력 게이지가 50%가 남았다면 몇대를 더 때려야 하는지 계산이 되겠죠?
 
 순환 설계와 밸런스는 효율을 계산하는 인간의 특성 때문에 필요해요.
 몬스터를 처치해서 보상을 획득하고 획득한 보상을 이용해서 캐릭터를 키우고 다음 몬스터에게 입히는 대미지와 갂이는 체력을 보고 효율을 측정하죠.
 이렇게 게임의 전투부터 보상까지 연결해서 봐야 하기 때문에 순환 설계와 보상은 함께 고려를 해야 합니다.
 
 그럼 좋은 
 
 
 
 
 
 
 
 
 
 
 
 
 
	